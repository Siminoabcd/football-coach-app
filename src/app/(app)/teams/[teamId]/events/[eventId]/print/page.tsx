// src/app/(app)/teams/[teamId]/events/[eventId]/print/page.tsx
import { supabaseServer } from "@/lib/supabase-server";
import { notFound } from "next/navigation";
import PrintButton from "@/components/print-button";

export default async function PrintEventPage({
  params,
}: { params: { teamId: string; eventId: string } }) {
  const sb = await supabaseServer();

  const { data: team } = await sb
    .from("teams").select("id,name,season,color")
    .eq("id", params.teamId).single();

  const { data: event } = await sb
    .from("events").select("*")
    .eq("id", params.eventId).eq("team_id", params.teamId).single();

  if (!team || !event) notFound();

  const { data: players } = await sb
    .from("players").select("id,first_name,last_name")
    .eq("team_id", params.teamId).order("last_name");

  const { data: attendance } = await sb
    .from("attendance")
    .select("player_id,status,rpe,comment")
    .eq("event_id", params.eventId);

  const attendanceMap = new Map(attendance?.map(a => [a.player_id, a]) ?? []);
  const rows = (players ?? []).map(p => {
    const a = attendanceMap.get(p.id);
    return {
      name: `${p.first_name} ${p.last_name}`,
      status: a?.status ?? "—",
      rpe: a?.rpe ?? "—",
      comment: a?.comment ?? "",
    };
  });

  return (
    <main className="mx-auto max-w-3xl p-6 print:p-0 bg-white">
      <header className="flex items-start justify-between mb-6 print:mb-4">
        <div>
          <h1 className="text-2xl font-semibold">
            {team.name} — {event.type}{event.title ? `: ${event.title}` : ""}
          </h1>
          <div className="text-sm text-muted-foreground">Season: {team.season ?? "—"}</div>
        </div>
        <div className="text-right">
          <div className="text-sm">{event.date}{event.start_time ? ` · ${event.start_time}` : ""}</div>
          <div className="text-xs text-muted-foreground">Generated by CoachBoard</div>
          <PrintButton />
        </div>
      </header>

      {(event.notes_pre ?? "").trim() && (
        <section className="mb-6">
          <h2 className="font-medium mb-2">Pre-event notes</h2>
          <div className="whitespace-pre-wrap text-sm leading-relaxed">{event.notes_pre}</div>
        </section>
      )}

      <section className="mb-6">
        <h2 className="font-medium mb-2">Attendance & RPE</h2>
        <table className="w-full text-sm border border-border">
          <thead>
            <tr className="bg-muted">
              <th className="p-2 text-left w-[45%]">Player</th>
              <th className="p-2 text-left w-[20%]">Status</th>
              <th className="p-2 text-left w-[10%]">RPE</th>
              <th className="p-2 text-left">Comment</th>
            </tr>
          </thead>
          <tbody>
            {rows.map((r, i) => (
              <tr key={i} className="border-t border-border">
                <td className="p-2">{r.name}</td>
                <td className="p-2 capitalize">{r.status}</td>
                <td className="p-2">{r.rpe}</td>
                <td className="p-2">{r.comment}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </section>

      {(event.notes_post ?? "").trim() && (
        <section className="mb-6">
          <h2 className="font-medium mb-2">Post-event notes</h2>
          <div className="whitespace-pre-wrap text-sm leading-relaxed">{event.notes_post}</div>
        </section>
      )}

      <style>{`
        @media print {
          @page { size: A4; margin: 12mm; }
          html, body { background: #fff; }
        }
      `}</style>
    </main>
  );
}
